// <auto-generated />
using System;
using MiasHR.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MiasHR.Api.Migrations
{
    [DbContext(typeof(MiasHRDbContext))]
    [Migration("20231003205420_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiasHR.Api.Entities.GbCustomer", b =>
                {
                    b.Property<string>("CustCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cust_code");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_name");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("MpsCustId")
                        .HasColumnType("int")
                        .HasColumnName("mps_cust_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UserCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("user_code");

                    b.HasKey("CustCode", "OrgCode")
                        .HasName("PK__GB_CUSTO__B40DCE487F60ED59");

                    b.HasIndex(new[] { "OrgCode" }, "XIF1GB_CUSTOMER");

                    b.ToTable("GB_CUSTOMER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.GbDepartment", b =>
                {
                    b.Property<string>("DeptCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dept_code");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("AdminYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("admin_yn");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<int?>("DeptLevel")
                        .HasColumnType("int")
                        .HasColumnName("dept_level");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dept_name");

                    b.Property<string>("DivCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("div_code");

                    b.Property<string>("ManageEmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("manage_empl_code");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("QbKey")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("qb_key");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int?>("SortNo")
                        .HasColumnType("int")
                        .HasColumnName("sort_no");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("StoreYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("store_yn");

                    b.Property<string>("UpperDeptCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("upper_dept_code");

                    b.HasKey("DeptCode", "OrgCode")
                        .HasName("PK__GB_DEPAR__BF178631339FAB6E");

                    b.ToTable("GB_DEPARTMENT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.GbDivision", b =>
                {
                    b.Property<string>("DivCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("div_code");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("AdminYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("admin_yn");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<int?>("DivLevel")
                        .HasColumnType("int")
                        .HasColumnName("div_level");

                    b.Property<string>("DivName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("div_name");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int?>("SortNo")
                        .HasColumnType("int")
                        .HasColumnName("sort_no");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("TreeSortNo")
                        .HasColumnType("int")
                        .HasColumnName("tree_sort_no");

                    b.Property<string>("UpperDivCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("upper_div_code");

                    b.HasKey("DivCode", "OrgCode")
                        .HasName("PK__GB_DIVIS__BDE6D4CD395884C4");

                    b.ToTable("GB_DIVISION", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.GbOrganization", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fax");

                    b.Property<string>("Homepage")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("homepage");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("org_name");

                    b.Property<string>("OrgType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_type");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int?>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("ShortName")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("short_name");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("state");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel");

                    b.Property<string>("TempOrgYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("temp_org_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip");

                    b.HasKey("OrgCode")
                        .HasName("PK__GB_ORGAN__68B12E5D3F115E1A");

                    b.ToTable("GB_ORGANIZATION", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.GbOrganizationNumber", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<int>("Seq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seq"));

                    b.Property<string>("Class")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("class");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("ExpireDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("expire_date");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("No")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("no");

                    b.Property<DateTime?>("NoticeSendDate")
                        .HasColumnType("datetime")
                        .HasColumnName("notice_send_date");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("StartDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("start_date");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("OrgCode", "Seq")
                        .HasName("PK__GB_ORGAN__956CD596282DF8C2");

                    b.ToTable("GB_ORGANIZATION_NUMBER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.GbTask", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("TaskCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("task_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EndDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("end_date");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("StartDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("start_date");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("TaskDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("task_desc");

                    b.HasKey("OrgCode", "TaskCode")
                        .HasName("PK__GB_TASK__0C5C0748693CA210");

                    b.ToTable("GB_TASK", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.GbTaskMember", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("TaskCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("task_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.HasKey("OrgCode", "TaskCode", "EmplCode")
                        .HasName("PK__GB_TASK___128E2A0A6383C8BA");

                    b.ToTable("GB_TASK_MEMBER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.GbVendor", b =>
                {
                    b.Property<string>("VendCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("vend_code");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("MpsVendId")
                        .HasColumnType("int")
                        .HasColumnName("mps_vend_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UserCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("user_code");

                    b.Property<string>("VendName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("vend_name");

                    b.HasKey("VendCode", "OrgCode")
                        .HasName("PK__GB_VENDO__40C771430AD2A005");

                    b.HasIndex(new[] { "OrgCode" }, "XIF1GB_VENDOR");

                    b.ToTable("GB_VENDOR", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrAssignedProperty", b =>
                {
                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("Class")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("class");

                    b.Property<string>("ClassSn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("class_sn");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("manufacturer");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("model");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OtherName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("other_name");

                    b.Property<string>("ProductSn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_sn");

                    b.Property<string>("PropertyType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("property_type");

                    b.Property<string>("Purpose")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("purpose");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("Specification")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("specification");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Seq");

                    b.ToTable("HR_ASSIGNED_PROPERTY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrAutoAccident", b =>
                {
                    b.Property<string>("ManageNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("manage_no");

                    b.Property<string>("AccidentDesc")
                        .HasColumnType("text")
                        .HasColumnName("accident_desc");

                    b.Property<string>("AccidentPlace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("accident_place");

                    b.Property<string>("Ampm")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("ampm");

                    b.Property<string>("AutoCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("auto_code");

                    b.Property<string>("AutoPurpose")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("auto_purpose");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dept_code");

                    b.Property<string>("EmplCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("OtherAutoDesc")
                        .HasColumnType("text")
                        .HasColumnName("other_auto_desc");

                    b.Property<string>("OtherLicenseNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("other_license_no");

                    b.Property<string>("OtherModel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("other_model");

                    b.Property<string>("OtherName")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("char(18)")
                        .HasColumnName("other_name")
                        .IsFixedLength();

                    b.Property<string>("OtherPlateNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("other_plate_no");

                    b.Property<string>("OtherTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("other_tel");

                    b.Property<string>("OtherVinNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("other_vin_no");

                    b.Property<string>("ReportDate")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("char(18)")
                        .HasColumnName("report_date")
                        .IsFixedLength();

                    b.Property<string>("ReportEmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("report_empl_code");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Time")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("time");

                    b.HasKey("ManageNo");

                    b.ToTable("HR_AUTO_ACCIDENT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrContact", b =>
                {
                    b.Property<string>("OtherCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("other_code");

                    b.Property<string>("Cell")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cell");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("fax");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("OtherType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("other_type");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("state");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel");

                    b.Property<string>("Tel2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel2");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip");

                    b.HasKey("OtherCode")
                        .HasName("PK__HR_OTHER__0E0B69A07A672E12");

                    b.ToTable("HR_CONTACT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployee", b =>
                {
                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("ActiveYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active_yn");

                    b.Property<string>("BadgeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("badge_code");

                    b.Property<string>("BuildingLoc")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("building_loc");

                    b.Property<string>("BusinessTitle")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("business_title");

                    b.Property<string>("ComEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("com_email");

                    b.Property<string>("ComFax")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("com_fax");

                    b.Property<string>("ComTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("com_tel");

                    b.Property<string>("ComTelExt")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("com_tel_ext");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dept_code");

                    b.Property<string>("DivCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("div_code");

                    b.Property<string>("EmplType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_type");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("HireDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("hire_date");

                    b.Property<string>("HourlybaseYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("hourlybase_yn");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("middle_name");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("NickName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nick_name");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Other")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("other");

                    b.Property<string>("PayrollCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("payroll_code");

                    b.Property<string>("PayrollOrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("payroll_org_code");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image")
                        .HasColumnName("photo");

                    b.Property<byte[]>("PhotoThumbnail")
                        .HasColumnType("image")
                        .HasColumnName("photo_thumbnail");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("position");

                    b.Property<string>("PositionYrs")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("position_yrs");

                    b.Property<string>("PtoHireDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("pto_hire_date");

                    b.Property<string>("QbKey")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("qb_key");

                    b.Property<DateTime?>("QbSendDate")
                        .HasColumnType("datetime")
                        .HasColumnName("qb_send_date");

                    b.Property<string>("ResignDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("resign_date");

                    b.Property<string>("ResignReason")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("resign_reason");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("TnaStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tna_status");

                    b.Property<string>("UpperEmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("upper_empl_code");

                    b.HasKey("EmplCode")
                        .HasName("PK__HR_EMPLO__14A650FA2DE6D218");

                    b.HasIndex(new[] { "OrgCode", "ActiveYn", "Status", "DivCode", "DeptCode" }, "IX_HR_EMPLOYEE_1");

                    b.ToTable("HR_EMPLOYEE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeAllHistory", b =>
                {
                    b.Property<int>("Seq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seq"));

                    b.Property<string>("ActiveYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active_yn");

                    b.Property<string>("AlienNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("alien_no");

                    b.Property<string>("BadgeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("badge_code");

                    b.Property<string>("BirthDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("birth_date");

                    b.Property<string>("BuildingLoc")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("building_loc");

                    b.Property<string>("BusinessTitle")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("business_title");

                    b.Property<string>("Cell")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cell");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city");

                    b.Property<string>("City2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city2");

                    b.Property<string>("ComEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("com_email");

                    b.Property<string>("ComFax")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("com_fax");

                    b.Property<string>("ComTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("com_tel");

                    b.Property<string>("ComTelExt")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("com_tel_ext");

                    b.Property<string>("Contact1Addr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact1_addr1");

                    b.Property<string>("Contact1Addr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact1_addr2");

                    b.Property<string>("Contact1Cell")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact1_cell");

                    b.Property<string>("Contact1Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact1_name");

                    b.Property<string>("Contact1Relationship")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact1_relationship");

                    b.Property<string>("Contact1Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact1_tel");

                    b.Property<string>("Contact2Addr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact2_addr1");

                    b.Property<string>("Contact2Addr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact2_addr2");

                    b.Property<string>("Contact2Cell")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact2_cell");

                    b.Property<string>("Contact2Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact2_name");

                    b.Property<string>("Contact2Relationship")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact2_relationship");

                    b.Property<string>("Contact2Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact2_tel");

                    b.Property<string>("Country")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("country");

                    b.Property<string>("Country2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("country2");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Degree")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("degree");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dept_code");

                    b.Property<string>("DivCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("div_code");

                    b.Property<string>("EmplCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("EmplType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_type");

                    b.Property<int?>("Exemptions")
                        .HasColumnType("int")
                        .HasColumnName("exemptions");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("gender");

                    b.Property<string>("HireDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("hire_date");

                    b.Property<string>("HourlybaseYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("hourlybase_yn");

                    b.Property<string>("I9Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("i9_date");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MarriedYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married_yn");

                    b.Property<string>("Memo")
                        .HasColumnType("text")
                        .HasColumnName("memo");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("middle_name");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("NickName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nick_name");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("PayrollCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("payroll_code");

                    b.Property<string>("PayrollOrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("payroll_org_code");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("image")
                        .HasColumnName("photo");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("position");

                    b.Property<string>("PositionYrs")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("position_yrs");

                    b.Property<string>("PtoHireDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("pto_hire_date");

                    b.Property<string>("ResidentStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("resident_status");

                    b.Property<string>("ResignDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("resign_date");

                    b.Property<string>("ResignReason")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("resign_reason");

                    b.Property<byte[]>("Ssn")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("ssn");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("state");

                    b.Property<string>("State2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("state2");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.Property<string>("Street2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street2");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("TnaStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tna_status");

                    b.Property<string>("W4Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("w4_status");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip");

                    b.Property<string>("Zip2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip2");

                    b.HasKey("Seq")
                        .HasName("PK__HR_EMPLOYEE_ALL_HISTORY");

                    b.HasIndex(new[] { "EmplCode" }, "IX_HR_EMPLOYEE_ALL_HISTORY");

                    b.ToTable("HR_EMPLOYEE_ALL_HISTORY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeApprover", b =>
                {
                    b.Property<int>("Seq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seq"));

                    b.Property<string>("Approver1st")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("approver_1st");

                    b.Property<string>("Approver2nd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("approver_2nd");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OtherManager")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("other_manager");

                    b.Property<string>("PtoNoticeManager")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pto_notice_manager");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Seq");

                    b.HasIndex(new[] { "EmplCode", "Status" }, "IX_HR_EMPLOYEE_APPROVER_1");

                    b.HasIndex(new[] { "Approver1st", "Status" }, "IX_HR_EMPLOYEE_APPROVER_2");

                    b.HasIndex(new[] { "Approver2nd", "Status" }, "IX_HR_EMPLOYEE_APPROVER_3");

                    b.ToTable("HR_EMPLOYEE_APPROVER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeCareer", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("company_name");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("FromYyyymm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("from_yyyymm");

                    b.Property<string>("JobDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("job_desc");

                    b.Property<string>("LeaveReason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("leave_reason");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("numeric(12, 3)")
                        .HasColumnName("salary");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("ToYyyymm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("to_yyyymm");

                    b.HasKey("OrgCode", "EmplCode", "Seq")
                        .HasName("PK__HR_EMPLO__3A4E25C017036CC0");

                    b.ToTable("HR_EMPLOYEE_CAREER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeDetail", b =>
                {
                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("ActiveYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active_yn");

                    b.Property<string>("AlienNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("alien_no");

                    b.Property<string>("BirthDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("birth_date");

                    b.Property<string>("Cell")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cell");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city");

                    b.Property<string>("City2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city2");

                    b.Property<string>("Contact1Addr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact1_addr1");

                    b.Property<string>("Contact1Addr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact1_addr2");

                    b.Property<string>("Contact1Cell")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact1_cell");

                    b.Property<string>("Contact1Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact1_name");

                    b.Property<string>("Contact1Relationship")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact1_relationship");

                    b.Property<string>("Contact1Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact1_tel");

                    b.Property<string>("Contact2Addr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact2_addr1");

                    b.Property<string>("Contact2Addr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact2_addr2");

                    b.Property<string>("Contact2Cell")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact2_cell");

                    b.Property<string>("Contact2Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact2_name");

                    b.Property<string>("Contact2Relationship")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact2_relationship");

                    b.Property<string>("Contact2Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("contact2_tel");

                    b.Property<string>("Country")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("country");

                    b.Property<string>("Country2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("country2");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Degree")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("degree");

                    b.Property<int?>("Exemptions")
                        .HasColumnType("int")
                        .HasColumnName("exemptions");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("gender");

                    b.Property<string>("I9Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("i9_date");

                    b.Property<string>("MarriedYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("married_yn");

                    b.Property<string>("Memo")
                        .HasColumnType("text")
                        .HasColumnName("memo");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Other")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("other");

                    b.Property<string>("ResidentStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("resident_status");

                    b.Property<byte[]>("Ssn")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("ssn");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("state");

                    b.Property<string>("State2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("state2");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.Property<string>("Street2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street2");

                    b.Property<string>("Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tel");

                    b.Property<string>("W4Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("w4_status");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip");

                    b.Property<string>("Zip2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip2");

                    b.HasKey("EmplCode")
                        .HasName("PK__HR_EMPLO__14A650FA1CBC4616");

                    b.ToTable("HR_EMPLOYEE_DETAIL", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeEducation", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EduContent")
                        .HasColumnType("text")
                        .HasColumnName("edu_content");

                    b.Property<string>("EduName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("edu_name");

                    b.Property<string>("EduType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("edu_type");

                    b.Property<string>("FinishDegree")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("finish_degree");

                    b.Property<string>("FromDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("from_date");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("ToDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("to_date");

                    b.HasKey("OrgCode", "EmplCode", "Seq")
                        .HasName("PK__HR_EMPLO__3A4E25C000200768");

                    b.ToTable("HR_EMPLOYEE_EDUCATION", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeHistory", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<string>("HistType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("hist_type");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("NewCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("new_code");

                    b.Property<string>("NewDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("new_desc");

                    b.Property<string>("OldCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("old_code");

                    b.Property<string>("OldDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("old_desc");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("OrgCode", "EmplCode", "Seq")
                        .HasName("PK__HR_EMPLO__3A4E25C005D8E0BE");

                    b.ToTable("HR_EMPLOYEE_HISTORY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeePlan", b =>
                {
                    b.Property<string>("Yyyymm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("yyyymm");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dept_code");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<int?>("PlanCnt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("plan_cnt")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.HasKey("Yyyymm", "DeptCode", "OrgCode")
                        .HasName("PK__HR_EMPLO__66CEDDAE04AFB25B");

                    b.ToTable("HR_EMPLOYEE_PLAN", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeRp", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("RpTitle")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("rp_title");

                    b.Property<string>("RpType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("rp_type");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("OrgCode", "EmplCode", "Seq")
                        .HasName("PK__HR_EMPLO__3A4E25C00B91BA14");

                    b.ToTable("HR_EMPLOYEE_RP", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeScanimage", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<byte[]>("Image")
                        .HasColumnType("image")
                        .HasColumnName("image");

                    b.Property<string>("ImageType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("image_type");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.HasKey("OrgCode", "EmplCode", "Seq")
                        .HasName("PK__HR_EMPLO__3A4E25C01E05700A");

                    b.ToTable("HR_EMPLOYEE_SCANIMAGE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEmployeeSkill", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("Certificate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("certificate");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("Skill")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("skill");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("OrgCode", "EmplCode", "Seq")
                        .HasName("PK__HR_EMPLO__3A4E25C06EF57B66");

                    b.ToTable("HR_EMPLOYEE_SKILL", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalBasic", b =>
                {
                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("Category")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("category");

                    b.Property<string>("Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("grade");

                    b.Property<string>("OrgCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code")
                        .HasDefaultValueSql("('a')");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<short?>("DistributePer")
                        .HasColumnType("smallint")
                        .HasColumnName("distribute_per");

                    b.Property<short?>("EvalPer")
                        .HasColumnType("smallint")
                        .HasColumnName("eval_per");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("PFrom")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("p_from");

                    b.Property<string>("PTo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("p_to");

                    b.Property<decimal?>("PointFrom")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("point_from");

                    b.Property<decimal?>("PointTo")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("point_to");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.HasKey("Year", "Term", "Category", "Grade", "OrgCode");

                    b.ToTable("HR_EVAL_BASIC", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalEmployeeResult", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("Factor")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("factor");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<short?>("S1FactorPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("s1_factor_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("S1Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("s1_grade");

                    b.Property<short?>("S2FactorPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("s2_factor_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("S2Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("s2_grade");

                    b.Property<short?>("S3FactorPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("s3_factor_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("S3Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("s3_grade");

                    b.HasKey("OrgCode", "Year", "Term", "EmplCode", "Factor");

                    b.HasIndex(new[] { "EmplCode" }, "IX_HR_EVAL_EMPLOYEE_RESULT_1");

                    b.ToTable("HR_EVAL_EMPLOYEE_RESULT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalEmployeeSummary", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EvalGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("eval_grade");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<decimal?>("GrpEvalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("grp_eval_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("LateCnt")
                        .HasColumnType("smallint")
                        .HasColumnName("late_cnt");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("position");

                    b.Property<string>("PositionYrs")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("position_yrs");

                    b.Property<string>("S1Comment")
                        .HasColumnType("text")
                        .HasColumnName("s1_comment");

                    b.Property<string>("S1EvalGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("s1_eval_grade");

                    b.Property<short?>("S1FactorPoint")
                        .HasColumnType("smallint")
                        .HasColumnName("s1_factor_point");

                    b.Property<decimal?>("S1Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("s1_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("S2Comment")
                        .HasColumnType("text")
                        .HasColumnName("s2_comment");

                    b.Property<string>("S2EvalGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("s2_eval_grade");

                    b.Property<short?>("S2FactorPoint")
                        .HasColumnType("smallint")
                        .HasColumnName("s2_factor_point");

                    b.Property<decimal?>("S2Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("s2_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("S3EvalGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("s3_eval_grade");

                    b.Property<short?>("S3FactorPoint")
                        .HasColumnType("smallint")
                        .HasColumnName("s3_factor_point");

                    b.Property<decimal?>("S3Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("s3_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("S4Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("s4_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("S5Comment")
                        .HasColumnType("text")
                        .HasColumnName("s5_comment");

                    b.Property<decimal?>("S5Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("s5_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("TotalPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("total_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<short?>("WarningCnt")
                        .HasColumnType("smallint")
                        .HasColumnName("warning_cnt");

                    b.Property<short?>("WarningMinutes")
                        .HasColumnType("smallint")
                        .HasColumnName("warning_minutes");

                    b.HasKey("OrgCode", "Year", "Term", "EmplCode")
                        .HasName("PK_HR_EVAL_SUMMARY");

                    b.ToTable("HR_EVAL_EMPLOYEE_SUMMARY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalFactor", b =>
                {
                    b.Property<string>("Factor")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("factor");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("FactorDesc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("factor_desc");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.HasKey("Factor");

                    b.ToTable("HR_EVAL_FACTOR", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalFactorDetail", b =>
                {
                    b.Property<string>("Factor")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("factor");

                    b.Property<string>("FactorGrade")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("factor_grade");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<short?>("Point")
                        .HasColumnType("smallint")
                        .HasColumnName("point");

                    b.HasKey("Factor", "FactorGrade");

                    b.ToTable("HR_EVAL_FACTOR_DETAIL", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalFactorMapping", b =>
                {
                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<string>("Factor")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("factor");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.HasKey("Year", "Term", "OrgCode", "GroupCode", "Factor");

                    b.ToTable("HR_EVAL_FACTOR_MAPPING", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalGroup", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Div")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("div");

                    b.Property<short?>("DivSortNo")
                        .HasColumnType("smallint")
                        .HasColumnName("div_sort_no");

                    b.Property<string>("GroupDesc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("group_desc");

                    b.Property<short?>("GroupSortNo")
                        .HasColumnType("smallint")
                        .HasColumnName("group_sort_no");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Step1Appraiser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("step1_appraiser");

                    b.Property<string>("Step2Appraiser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("step2_appraiser");

                    b.Property<string>("Step3Appraiser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("step3_appraiser");

                    b.HasKey("OrgCode", "Year", "Term", "GroupCode");

                    b.ToTable("HR_EVAL_GROUP", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalGroupDept", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dept_code");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("DeptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dept_name");

                    b.Property<short?>("DeptSortNo")
                        .HasColumnType("smallint")
                        .HasColumnName("dept_sort_no");

                    b.Property<string>("DivCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("div_code");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.HasKey("OrgCode", "Year", "Term", "DeptCode");

                    b.ToTable("HR_EVAL_GROUP_DEPT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalGroupResult", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("grade");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.HasKey("OrgCode", "Year", "Term", "GroupCode");

                    b.ToTable("HR_EVAL_GROUP_RESULT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalHalfResult", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<decimal?>("AdjRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("adj_rate");

                    b.Property<decimal?>("AvgRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("avg_rate");

                    b.Property<decimal?>("BOth1Monthly")
                        .HasColumnType("money")
                        .HasColumnName("b_oth1_monthly");

                    b.Property<decimal?>("BOth2Monthly")
                        .HasColumnType("money")
                        .HasColumnName("b_oth2_monthly");

                    b.Property<decimal?>("BOth3Monthly")
                        .HasColumnType("money")
                        .HasColumnName("b_oth3_monthly");

                    b.Property<byte[]>("BPayrollMonthly")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("b_payroll_monthly");

                    b.Property<byte[]>("Bonus")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("bonus");

                    b.Property<decimal?>("BonusRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("bonus_rate");

                    b.Property<byte[]>("BonusTotal")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("bonus_total");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("empl_grade");

                    b.Property<decimal?>("EmplPer")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("empl_per");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<string>("GroupGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("group_grade");

                    b.Property<decimal?>("GroupPer")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("group_per");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<decimal?>("Oth1")
                        .HasColumnType("money")
                        .HasColumnName("oth1");

                    b.Property<decimal?>("Oth2")
                        .HasColumnType("money")
                        .HasColumnName("oth2");

                    b.Property<decimal?>("Oth3")
                        .HasColumnType("money")
                        .HasColumnName("oth3");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("position");

                    b.Property<short?>("PositionYrs")
                        .HasColumnType("smallint")
                        .HasColumnName("position_yrs");

                    b.Property<decimal?>("ResultRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("result_rate");

                    b.HasKey("OrgCode", "Year", "Term", "EmplCode");

                    b.ToTable("HR_EVAL_HALF_RESULT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalHalfResultLog", b =>
                {
                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<decimal?>("AdjRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("adj_rate");

                    b.Property<decimal?>("AvgRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("avg_rate");

                    b.Property<decimal?>("BOth1Monthly")
                        .HasColumnType("money")
                        .HasColumnName("b_oth1_monthly");

                    b.Property<decimal?>("BOth2Monthly")
                        .HasColumnType("money")
                        .HasColumnName("b_oth2_monthly");

                    b.Property<decimal?>("BOth3Monthly")
                        .HasColumnType("money")
                        .HasColumnName("b_oth3_monthly");

                    b.Property<byte[]>("BPayrollMonthly")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("b_payroll_monthly");

                    b.Property<byte[]>("Bonus")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("bonus");

                    b.Property<decimal?>("BonusRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("bonus_rate");

                    b.Property<byte[]>("BonusTotal")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("bonus_total");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("empl_grade");

                    b.Property<decimal?>("EmplPer")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("empl_per");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<string>("GroupGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("group_grade");

                    b.Property<decimal?>("GroupPer")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("group_per");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime")
                        .HasColumnName("log_date");

                    b.Property<string>("LogUserId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("log_user_id");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<decimal?>("Oth1")
                        .HasColumnType("money")
                        .HasColumnName("oth1");

                    b.Property<decimal?>("Oth2")
                        .HasColumnType("money")
                        .HasColumnName("oth2");

                    b.Property<decimal?>("Oth3")
                        .HasColumnType("money")
                        .HasColumnName("oth3");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("position");

                    b.Property<short?>("PositionYrs")
                        .HasColumnType("smallint")
                        .HasColumnName("position_yrs");

                    b.Property<decimal?>("ResultRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("result_rate");

                    b.HasKey("Seq", "OrgCode", "Year", "Term", "EmplCode");

                    b.ToTable("HR_EVAL_HALF_RESULT_LOG", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalManager", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("MgrGroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("mgr_group_code");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("position");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.HasKey("OrgCode", "Year", "Term", "EmplCode");

                    b.ToTable("HR_EVAL_MANAGER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalPromotionEmployee", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("NewPosition")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("new_position");

                    b.Property<string>("OldPosition")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("old_position");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("type");

                    b.HasKey("OrgCode", "Year", "EmplCode");

                    b.ToTable("HR_EVAL_PROMOTION_EMPLOYEE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalSelfResult", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("Factor")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("factor");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<short?>("SelfFactorPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("self_factor_point")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SelfGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("self_grade");

                    b.HasKey("OrgCode", "Year", "Term", "EmplCode", "Factor");

                    b.ToTable("HR_EVAL_SELF_RESULT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalSelfSummary", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("SelfComment")
                        .HasColumnType("text")
                        .HasColumnName("self_comment");

                    b.Property<string>("SelfGrade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("self_grade");

                    b.Property<decimal?>("SelfPoint")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("self_point")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("OrgCode", "Year", "Term", "EmplCode");

                    b.ToTable("HR_EVAL_SELF_SUMMARY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalYearResult", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<decimal?>("AOth1Annual")
                        .HasColumnType("money")
                        .HasColumnName("a_oth1_annual");

                    b.Property<decimal?>("AOth2Annual")
                        .HasColumnType("money")
                        .HasColumnName("a_oth2_annual");

                    b.Property<decimal?>("AOth3Annual")
                        .HasColumnType("money")
                        .HasColumnName("a_oth3_annual");

                    b.Property<byte[]>("APayrollAnnual")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("a_payroll_annual");

                    b.Property<decimal?>("AdjRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("adj_rate");

                    b.Property<decimal?>("AvgRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("avg_rate");

                    b.Property<decimal?>("BOth1Annual")
                        .HasColumnType("money")
                        .HasColumnName("b_oth1_annual");

                    b.Property<decimal?>("BOth2Annual")
                        .HasColumnType("money")
                        .HasColumnName("b_oth2_annual");

                    b.Property<decimal?>("BOth3Annual")
                        .HasColumnType("money")
                        .HasColumnName("b_oth3_annual");

                    b.Property<byte[]>("BPayrollAnnual")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("b_payroll_annual");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<decimal?>("IncreaseRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("increase_rate");

                    b.Property<byte[]>("IncreaseTotal")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("increase_total");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<decimal?>("Oth1Increase")
                        .HasColumnType("money")
                        .HasColumnName("oth1_increase");

                    b.Property<string>("Oth1Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth1_name");

                    b.Property<string>("Oth1StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth1_start_month");

                    b.Property<decimal?>("Oth2Increase")
                        .HasColumnType("money")
                        .HasColumnName("oth2_increase");

                    b.Property<string>("Oth2Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth2_name");

                    b.Property<string>("Oth2StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth2_start_month");

                    b.Property<decimal?>("Oth3Increase")
                        .HasColumnType("money")
                        .HasColumnName("oth3_increase");

                    b.Property<string>("Oth3Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth3_name");

                    b.Property<string>("Oth3StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth3_start_month");

                    b.Property<byte[]>("PayrollIncrease")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("payroll_increase");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("position");

                    b.Property<short?>("PositionYrs")
                        .HasColumnType("smallint")
                        .HasColumnName("position_yrs");

                    b.Property<decimal?>("PromoRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("promo_rate");

                    b.Property<decimal?>("ResultRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("result_rate");

                    b.Property<string>("T1Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("t1_grade");

                    b.Property<decimal?>("T1Per")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("t1_per");

                    b.Property<string>("T2Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("t2_grade");

                    b.Property<decimal?>("T2Per")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("t2_per");

                    b.HasKey("OrgCode", "Year", "EmplCode");

                    b.ToTable("HR_EVAL_YEAR_RESULT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrEvalYearResultLog", b =>
                {
                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<decimal?>("AOth1Annual")
                        .HasColumnType("money")
                        .HasColumnName("a_oth1_annual");

                    b.Property<decimal?>("AOth2Annual")
                        .HasColumnType("money")
                        .HasColumnName("a_oth2_annual");

                    b.Property<decimal?>("AOth3Annual")
                        .HasColumnType("money")
                        .HasColumnName("a_oth3_annual");

                    b.Property<byte[]>("APayrollAnnual")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("a_payroll_annual");

                    b.Property<decimal?>("AdjRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("adj_rate");

                    b.Property<decimal?>("AvgRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("avg_rate");

                    b.Property<decimal?>("BOth1Annual")
                        .HasColumnType("money")
                        .HasColumnName("b_oth1_annual");

                    b.Property<decimal?>("BOth2Annual")
                        .HasColumnType("money")
                        .HasColumnName("b_oth2_annual");

                    b.Property<decimal?>("BOth3Annual")
                        .HasColumnType("money")
                        .HasColumnName("b_oth3_annual");

                    b.Property<byte[]>("BPayrollAnnual")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("b_payroll_annual");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<decimal?>("IncreaseRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("increase_rate");

                    b.Property<byte[]>("IncreaseTotal")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("increase_total");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime")
                        .HasColumnName("log_date");

                    b.Property<string>("LogUserId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("log_user_id");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<decimal?>("Oth1Increase")
                        .HasColumnType("money")
                        .HasColumnName("oth1_increase");

                    b.Property<string>("Oth1Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth1_name");

                    b.Property<string>("Oth1StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth1_start_month");

                    b.Property<decimal?>("Oth2Increase")
                        .HasColumnType("money")
                        .HasColumnName("oth2_increase");

                    b.Property<string>("Oth2Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth2_name");

                    b.Property<string>("Oth2StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth2_start_month");

                    b.Property<decimal?>("Oth3Increase")
                        .HasColumnType("money")
                        .HasColumnName("oth3_increase");

                    b.Property<string>("Oth3Name")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth3_name");

                    b.Property<string>("Oth3StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth3_start_month");

                    b.Property<byte[]>("PayrollIncrease")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("payroll_increase");

                    b.Property<string>("Position")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("position");

                    b.Property<short?>("PositionYrs")
                        .HasColumnType("smallint")
                        .HasColumnName("position_yrs");

                    b.Property<decimal?>("PromoRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("promo_rate");

                    b.Property<decimal?>("ResultRate")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("result_rate");

                    b.Property<string>("T1Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("t1_grade");

                    b.Property<decimal?>("T1Per")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("t1_per");

                    b.Property<string>("T2Grade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("t2_grade");

                    b.Property<decimal?>("T2Per")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("t2_per");

                    b.HasKey("Seq", "OrgCode", "Year", "EmplCode");

                    b.ToTable("HR_EVAL_YEAR_RESULT_LOG", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrGeneralCode", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Class")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("class");

                    b.Property<string>("Code")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<int?>("DayHours")
                        .HasColumnType("int")
                        .HasColumnName("day_hours");

                    b.Property<decimal?>("Decimal1")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("decimal_1");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<int?>("Number1")
                        .HasColumnType("int")
                        .HasColumnName("number_1");

                    b.Property<int?>("Number2")
                        .HasColumnType("int")
                        .HasColumnName("number_2");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("remark");

                    b.Property<int?>("SortNo")
                        .HasColumnType("int")
                        .HasColumnName("sort_no");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Value1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("value_1");

                    b.Property<string>("Value2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("value_2");

                    b.Property<string>("Value3")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("value_3");

                    b.Property<string>("Value4")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("value_4");

                    b.HasKey("OrgCode", "Class", "Code")
                        .HasName("PK__HR_GENER__4699A49F6DCC4D03");

                    b.ToTable("HR_GENERAL_CODE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrHoliday", b =>
                {
                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Date")
                        .HasName("PK__HR_HOLID__D9DE21FC74AE54BC");

                    b.ToTable("HR_HOLIDAY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrIncident", b =>
                {
                    b.Property<string>("ManageNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("manage_no");

                    b.Property<string>("AccidentPlace")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("accident_place");

                    b.Property<string>("Ampm")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("ampm");

                    b.Property<string>("Call911Yn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("call_911_yn");

                    b.Property<string>("City")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("city");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<string>("DoctorCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("doctor_code");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("FirstAidYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("first_aid_yn");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("gender");

                    b.Property<string>("HomeTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("home_tel");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("hospital_code");

                    b.Property<string>("HospitalYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("hospital_yn");

                    b.Property<string>("IncidentDesc")
                        .HasColumnType("text")
                        .HasColumnName("incident_desc");

                    b.Property<int?>("InjuredX")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("injured_x")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("InjuredY")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("injured_y")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("OtherTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("other_tel");

                    b.Property<string>("PersonType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("person_type");

                    b.Property<string>("ReportedBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reported_by");

                    b.Property<string>("ReportedDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("reported_date");

                    b.Property<string>("ReviewedBy")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reviewed_by");

                    b.Property<string>("ReviewedDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("reviewed_date");

                    b.Property<string>("State")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("state");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.Property<string>("Time")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("time");

                    b.Property<string>("Witness1Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("witness1_name");

                    b.Property<string>("Witness1Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("witness1_tel");

                    b.Property<string>("Witness2Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("witness2_name");

                    b.Property<string>("Witness2Tel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("witness2_tel");

                    b.Property<string>("WorkTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("work_tel");

                    b.Property<string>("WorkcompDesc")
                        .HasColumnType("text")
                        .HasColumnName("workcomp_desc");

                    b.Property<string>("WorkcompYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("workcomp_yn");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip");

                    b.HasKey("ManageNo");

                    b.ToTable("HR_INCIDENT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrInsEmplPicked", b =>
                {
                    b.Property<int>("InsPickedId")
                        .HasColumnType("int")
                        .HasColumnName("ins_picked_id");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("BundleYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("bundle_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<decimal?>("CompanyPayAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("company_pay_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Coverage")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("coverage");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<decimal?>("DepAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("dep_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("EeAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("ee_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("EePayAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("ee_pay_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<int?>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("plan_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("SurfingId")
                        .HasColumnType("int")
                        .HasColumnName("surfing_id");

                    b.Property<decimal?>("TotalAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("total_amt")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("InsPickedId", "OrgCode");

                    b.HasIndex(new[] { "EmplCode", "PlanId", "Status", "OrgCode" }, "IX_HR_INS_EMPL_PICKED_01");

                    b.HasIndex(new[] { "SurfingId", "Status", "OrgCode" }, "IX_HR_INS_EMPL_PICKED_02");

                    b.ToTable("HR_INS_EMPL_PICKED", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrInsEmplSurfing", b =>
                {
                    b.Property<int>("SurfingId")
                        .HasColumnType("int")
                        .HasColumnName("surfing_id");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Coverage")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("coverage");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<decimal?>("DepAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("dep_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("EeAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("ee_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("EmplCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<decimal?>("OtherEeAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("other_ee_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OtherEeBundleAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("other_ee_bundle_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OtherEechAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("other_eech_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OtherEechBundleAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("other_eech_bundle_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OtherEespAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("other_eesp_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OtherEespBundleAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("other_eesp_bundle_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OtherFamAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("other_fam_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("OtherFamBundleAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("other_fam_bundle_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("plan_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("total_amt")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("SurfingId", "OrgCode");

                    b.HasIndex(new[] { "PlanId", "EmplCode", "Status", "OrgCode" }, "IX_HR_INS_EMPL_SURFING_01");

                    b.HasIndex(new[] { "EmplCode", "Status", "OrgCode" }, "IX_HR_INS_EMPL_SURFING_02");

                    b.ToTable("HR_INS_EMPL_SURFING", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrInsNotEnroll", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("PlanType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("plan_type");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.HasKey("OrgCode", "StartDate", "EmplCode", "PlanType");

                    b.ToTable("HR_INS_NOT_ENROLL", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrInsPlan", b =>
                {
                    b.Property<int>("PlanId")
                        .HasColumnType("int")
                        .HasColumnName("plan_id");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("ContractCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("contract_code");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OpenYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("open_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<decimal?>("PayRateForDep")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("pay_rate_for_dep")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("PayRateForEe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("pay_rate_for_ee")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PlanDesc")
                        .HasColumnType("text")
                        .HasColumnName("plan_desc");

                    b.Property<byte[]>("PlanImage")
                        .HasColumnType("image")
                        .HasColumnName("plan_image");

                    b.Property<string>("PlanName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("plan_name");

                    b.Property<string>("PlanType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("plan_type");

                    b.Property<int?>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort_no")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("PlanId", "OrgCode");

                    b.ToTable("HR_INS_PLAN", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrLocker", b =>
                {
                    b.Property<string>("LockerGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("locker_group");

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("ReserveCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reserve_code");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("LockerGroup", "Code")
                        .HasName("PK__HR_LOCKER");

                    b.ToTable("HR_LOCKER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrParkingLot", b =>
                {
                    b.Property<string>("LotGroup")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("lot_group");

                    b.Property<string>("LotCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("lot_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("LotImage")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("lot_image");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("ReserveCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reserve_code");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("LotGroup", "LotCode")
                        .HasName("PK__HR_PARKING_LOT");

                    b.ToTable("HR_PARKING_LOT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrPayrollBenefit", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<decimal?>("AdjustAmt")
                        .HasColumnType("money")
                        .HasColumnName("adjust_amt");

                    b.Property<decimal?>("Benefit1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("benefit1")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Benefit2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("benefit2")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Benefit3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("benefit3")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Benefit4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("benefit4")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Benefit5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("benefit5")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("BenefitAmt")
                        .HasColumnType("money")
                        .HasColumnName("benefit_amt");

                    b.Property<string>("ContType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cont_type");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Id")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("PayDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("pay_date");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("Remark2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark2");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasColumnName("total_amt")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("type");

                    b.Property<string>("Yyyymm")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("yyyymm");

                    b.HasKey("OrgCode", "EmplCode", "Seq");

                    b.HasIndex(new[] { "PayDate", "EmplCode" }, "IX_HR_PAYROLL_BENEFIT_1");

                    b.ToTable("HR_PAYROLL_BENEFIT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrPayrollBonu", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<byte[]>("Bonus")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("bonus");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("PayDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("pay_date");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.Property<string>("Term")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("term");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("year");

                    b.HasKey("OrgCode", "EmplCode", "Seq");

                    b.ToTable("HR_PAYROLL_BONUS", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrPolicy", b =>
                {
                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("ConsentContent")
                        .HasColumnType("text")
                        .HasColumnName("consent_content");

                    b.Property<string>("ConsentYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("consent_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<int?>("Hit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<int?>("SortNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sort_no")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.HasKey("Seq");

                    b.ToTable("HR_POLICY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrPolicyConsentLog", b =>
                {
                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("ConsentYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("consent_yn");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int?>("PolicySeq")
                        .HasColumnType("int")
                        .HasColumnName("policy_seq");

                    b.HasKey("Seq")
                        .HasName("PK_HR_Policy_Consent_Log");

                    b.ToTable("HR_POLICY_CONSENT_LOG", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrPtoForInet", b =>
                {
                    b.Property<DateTime?>("CrtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("crt_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DayType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("day_type");

                    b.Property<string>("DayTypeDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("day_type_desc");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("EmplName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("empl_name");

                    b.Property<string>("EndDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("end_date");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("StartDate")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("start_date");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("user_id");

                    b.HasIndex(new[] { "UserId" }, "IX_HR_PTO_FOR_INET_01");

                    b.ToTable("HR_PTO_FOR_INET", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrTnaBadge", b =>
                {
                    b.Property<int>("Seq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seq"));

                    b.Property<string>("CardNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("card_no");

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("company_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<string>("DepartCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("depart_code");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("group_code");

                    b.Property<string>("Inout")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("inout");

                    b.Property<string>("PersonId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("person_id");

                    b.Property<string>("PersonName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("person_name");

                    b.Property<string>("Time")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("time");

                    b.HasKey("Seq")
                        .HasName("PK__HR_TNA_BADGE");

                    b.HasIndex(new[] { "Date", "GroupCode", "PersonId" }, "IX_HR_TNA_BADGE_01");

                    b.ToTable("HR_TNA_BADGE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrTnaDay", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<string>("DayType")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("day_type");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("StartTime")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("start_time");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UtoAppliedYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("uto_applied_yn")
                        .HasDefaultValueSql("('')");

                    b.HasKey("OrgCode", "EmplCode", "Seq")
                        .HasName("PK__HR_TNA_D__3A4E25C073852659");

                    b.HasIndex(new[] { "Date", "OrgCode", "DayType", "EmplCode" }, "IX_HR_TNA_DAY_1");

                    b.ToTable("HR_TNA_DAY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrTnaEmailNotice", b =>
                {
                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<DateTime?>("CrtDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("crt_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SendDate")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("send_date");

                    b.Property<string>("SendUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("send_user");

                    b.Property<string>("TypeDesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("type_desc");

                    b.HasKey("EmplCode", "Date");

                    b.ToTable("HR_TNA_EMAIL_NOTICE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrTnaInout", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Date")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("AutoCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("auto_code");

                    b.Property<string>("AutoYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("auto_yn");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<decimal?>("GasCardAmt")
                        .HasColumnType("money")
                        .HasColumnName("gas_card_amt");

                    b.Property<string>("GasCardCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gas_card_code");

                    b.Property<string>("GasCardYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("gas_card_yn");

                    b.Property<string>("InTime")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("in_time");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OutTime")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("out_time");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("OrgCode", "Date", "Seq")
                        .HasName("PK__HR_TNA_I__3A4E25C07EF6D905");

                    b.ToTable("HR_TNA_INOUT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrTnaStartTime", b =>
                {
                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("end_date")
                        .HasDefaultValueSql("((99991231))");

                    b.Property<string>("Fri")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("fri")
                        .HasDefaultValueSql("('Y')");

                    b.Property<string>("LateTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("late_time");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Mon")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("mon")
                        .HasDefaultValueSql("('Y')");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("StartDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("start_date");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Thu")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("thu")
                        .HasDefaultValueSql("('Y')");

                    b.Property<string>("Tue")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("tue")
                        .HasDefaultValueSql("('Y')");

                    b.Property<string>("Wed")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("wed")
                        .HasDefaultValueSql("('Y')");

                    b.Property<string>("WorkStartTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("work_start_time");

                    b.HasKey("Seq");

                    b.ToTable("HR_TNA_START_TIME", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrTnaTime", b =>
                {
                    b.Property<string>("BadgeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("badge_code");

                    b.Property<string>("BadgeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("badge_name");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("date");

                    b.Property<string>("EmplCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("group_code");

                    b.Property<string>("Inout")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("inout")
                        .HasDefaultValueSql("('IN')");

                    b.Property<string>("LateLevel")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("late_level");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("UpdateReason")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("update_reason");

                    b.Property<string>("UpdateType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("update_type");

                    b.Property<string>("WorkEndTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("work_end_time");

                    b.Property<string>("WorkStartTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("work_start_time");

                    b.HasIndex(new[] { "EmplCode", "OrgCode", "Date" }, "IX_HR_TNA_TIME_1");

                    b.HasIndex(new[] { "Date", "LateLevel" }, "IX_HR_TNA_TIME_2");

                    b.ToTable("HR_TNA_TIME", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrTransaction", b =>
                {
                    b.Property<string>("TransType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("trans_type");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<int?>("CodeLen")
                        .HasColumnType("int")
                        .HasColumnName("code_len");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<int?>("LastNo")
                        .HasColumnType("int")
                        .HasColumnName("last_no");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.HasKey("TransType", "OrgCode")
                        .HasName("PK__HR_TRANS__B4E867FA5DCAEF64");

                    b.ToTable("HR_TRANSACTION", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrVacation", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("Yyyy")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("yyyy");

                    b.Property<string>("VType")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("v_type");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<decimal?>("Days")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(6, 2)")
                        .HasColumnName("days")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<decimal?>("MonthAdjDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(6, 2)")
                        .HasColumnName("monthAdjDays")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<decimal?>("MonthUsedDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(6, 2)")
                        .HasColumnName("monthUsedDays")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<decimal?>("PreMonthLeftDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(6, 2)")
                        .HasColumnName("preMonthLeftDays")
                        .HasDefaultValueSql("((0.0))");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("StartDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("start_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("OrgCode", "EmplCode", "Yyyy", "VType", "Seq")
                        .HasName("PK__HR_VACAT__AC8DCEA15165187F");

                    b.ToTable("HR_VACATION", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrVacation20150707", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("Yyyy")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("yyyy");

                    b.Property<string>("VType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("v_type");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<decimal?>("Days")
                        .HasColumnType("decimal(6, 2)")
                        .HasColumnName("days");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("StartDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("start_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("OrgCode", "EmplCode", "Yyyy", "VType", "Seq")
                        .HasName("PK__HR_VACAT__20150707_AC8DCEA15165187F");

                    b.ToTable("HR_VACATION_20150707", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrWebLoginLog", b =>
                {
                    b.Property<string>("AcceptYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("accept_yn")
                        .HasDefaultValueSql("('Y')");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("Ip")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ip");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime")
                        .HasColumnName("login_date");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.ToTable("HR_WEB_LOGIN_LOG", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrWebMeeting", b =>
                {
                    b.Property<int>("ReqId")
                        .HasColumnType("int")
                        .HasColumnName("req_id");

                    b.Property<string>("AltMeetingDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("alt_meeting_date");

                    b.Property<TimeSpan?>("AltMeetingTime")
                        .HasColumnType("time")
                        .HasColumnName("alt_meeting_time");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("close_date");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("DeptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dept_name");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("InCharge")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("in_charge");

                    b.Property<string>("MeetingAttendance")
                        .HasColumnType("text")
                        .HasColumnName("meeting_attendance");

                    b.Property<string>("MeetingContent")
                        .HasColumnType("text")
                        .HasColumnName("meeting_content");

                    b.Property<string>("MeetingDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("meeting_date");

                    b.Property<TimeSpan?>("MeetingTime")
                        .HasColumnType("time")
                        .HasColumnName("meeting_time");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("ReqContent")
                        .HasColumnType("text")
                        .HasColumnName("req_content");

                    b.Property<string>("ReqDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("req_date");

                    b.Property<string>("ReqMeetingDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("req_meeting_date");

                    b.Property<TimeSpan?>("ReqMeetingTime")
                        .HasColumnType("time")
                        .HasColumnName("req_meeting_time");

                    b.Property<string>("ReqTo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("req_to");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("ReqId");

                    b.ToTable("HR_WEB_MEETING", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrWebMeetingLog", b =>
                {
                    b.Property<string>("AltMeetingDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("alt_meeting_date");

                    b.Property<TimeSpan?>("AltMeetingTime")
                        .HasColumnType("time")
                        .HasColumnName("alt_meeting_time");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("close_date");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("DeptName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dept_name");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("InCharge")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("in_charge");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime")
                        .HasColumnName("log_date");

                    b.Property<string>("LogType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("log_type");

                    b.Property<string>("LogUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("log_user");

                    b.Property<string>("MeetingAttendance")
                        .HasColumnType("text")
                        .HasColumnName("meeting_attendance");

                    b.Property<string>("MeetingContent")
                        .HasColumnType("text")
                        .HasColumnName("meeting_content");

                    b.Property<string>("MeetingDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("meeting_date");

                    b.Property<TimeSpan?>("MeetingTime")
                        .HasColumnType("time")
                        .HasColumnName("meeting_time");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("ReqContent")
                        .HasColumnType("text")
                        .HasColumnName("req_content");

                    b.Property<string>("ReqDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("req_date");

                    b.Property<int>("ReqId")
                        .HasColumnType("int")
                        .HasColumnName("req_id");

                    b.Property<string>("ReqMeetingDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("req_meeting_date");

                    b.Property<TimeSpan?>("ReqMeetingTime")
                        .HasColumnType("time")
                        .HasColumnName("req_meeting_time");

                    b.Property<string>("ReqTo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("req_to");

                    b.Property<int>("Seq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seq"));

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.ToTable("HR_WEB_MEETING_LOG", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrWebOutside", b =>
                {
                    b.Property<int>("Seq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seq"));

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Seq");

                    b.ToTable("HR_WEB_OUTSIDE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrWebRequest", b =>
                {
                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime?>("Approve1stDate")
                        .HasColumnType("datetime")
                        .HasColumnName("approve_1st_date");

                    b.Property<string>("Approve1stUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("approve_1st_user");

                    b.Property<string>("Approve1stYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("approve_1st_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<DateTime?>("Approve2ndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("approve_2nd_date");

                    b.Property<string>("Approve2ndUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("approve_2nd_user");

                    b.Property<string>("Approve2ndYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("approve_2nd_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<decimal?>("DaysCnt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("days_cnt")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("EmplCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int?>("HoursCnt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hours_cnt")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MhrsUpdateUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("mhrs_update_user");

                    b.Property<string>("MhrsUpdateYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("mhrs_update_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("PeriodFrom")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("period_from");

                    b.Property<string>("PeriodTo")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("period_to");

                    b.Property<DateTime?>("RejectDate")
                        .HasColumnType("datetime")
                        .HasColumnName("reject_date");

                    b.Property<string>("RejectReason")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("reject_reason");

                    b.Property<string>("RejectUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reject_user");

                    b.Property<string>("ReqContent")
                        .HasColumnType("text")
                        .HasColumnName("req_content");

                    b.Property<string>("ReqDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("req_date");

                    b.Property<string>("ReqIp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("req_ip");

                    b.Property<string>("ReqSubType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("req_sub_type");

                    b.Property<string>("ReqTitle")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("req_title");

                    b.Property<string>("ReqType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("req_type");

                    b.Property<string>("SickdayYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sickday_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Seq");

                    b.ToTable("HR_WEB_REQUEST", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.HrWebUser", b =>
                {
                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("created_user");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("LastLoginDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("last_login_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("LoginCnt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("login_cnt")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("MmsLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mms_level")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modified_user");

                    b.Property<string>("NickName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nick_name");

                    b.Property<string>("Pw")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("pw");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Temp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("temp");

                    b.HasKey("EmplCode");

                    b.HasIndex(new[] { "Email" }, "IX_HR_WEB_USER_1")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("HR_WEB_USER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.IfMpsDetail", b =>
                {
                    b.Property<Guid>("MpsDetailSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("mps_detail_sid");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MpsColorActual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_color_actual");

                    b.Property<int?>("MpsColorId")
                        .HasColumnType("int")
                        .HasColumnName("mps_color_id");

                    b.Property<string>("MpsColorIp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_color_ip");

                    b.Property<string>("MpsCustPono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_cust_pono");

                    b.Property<string>("MpsGraphicStyle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_graphic_style");

                    b.Property<int?>("MpsGraphicStyleId")
                        .HasColumnType("int")
                        .HasColumnName("mps_graphic_style_id");

                    b.Property<DateTime?>("MpsIndcDate")
                        .HasColumnType("datetime")
                        .HasColumnName("mps_indc_date");

                    b.Property<int?>("MpsMasterId")
                        .HasColumnType("int")
                        .HasColumnName("mps_master_id");

                    b.Property<Guid>("MpsMasterSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("mps_master_sid");

                    b.Property<int>("MpsOrderQty")
                        .HasColumnType("int")
                        .HasColumnName("mps_order_qty");

                    b.Property<string>("MpsStyle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_style");

                    b.Property<string>("MpsStyleDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mps_style_desc");

                    b.Property<int?>("MpsStyleId")
                        .HasColumnType("int")
                        .HasColumnName("mps_style_id");

                    b.Property<int>("MpsWoId")
                        .HasColumnType("int")
                        .HasColumnName("mps_wo_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("MpsDetailSid")
                        .HasName("PK__IF_MPS_D__02EF3B8A108B795B");

                    b.HasIndex(new[] { "MpsMasterSid" }, "XIF1IF_MPS_DETAIL");

                    b.ToTable("IF_MPS_DETAIL", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.IfMpsEvent", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<DateTime?>("ConfirmDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("confirm_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CustCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cust_code");

                    b.Property<DateTime?>("EventDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("event_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EventDesc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("event_desc");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("VendCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("vend_code");

                    b.HasKey("EventId")
                        .HasName("PK__IF_MPS_E__2370F727164452B1");

                    b.ToTable("IF_MPS_EVENT", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.IfMpsMaster", b =>
                {
                    b.Property<Guid>("MpsMasterSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("mps_master_sid");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CustCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cust_code");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MpsContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_contact");

                    b.Property<int>("MpsMasterId")
                        .HasColumnType("int")
                        .HasColumnName("mps_master_id");

                    b.Property<string>("MpsSeason")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_season");

                    b.Property<string>("MpsSeasonyear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("mps_seasonyear");

                    b.Property<int>("MpsTotalOrderQty")
                        .HasColumnType("int")
                        .HasColumnName("mps_total_order_qty");

                    b.Property<string>("MpsWono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_wono");

                    b.Property<decimal?>("MpsYardPcs")
                        .HasColumnType("numeric(12, 3)")
                        .HasColumnName("mps_yard_pcs");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("VendCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("vend_code");

                    b.HasKey("MpsMasterSid")
                        .HasName("PK__IF_MPS_M__696BDA0B1BFD2C07");

                    b.HasIndex(new[] { "CustCode", "OrgCode" }, "XIF1IF_MPS_MASTER");

                    b.HasIndex(new[] { "VendCode", "OrgCode" }, "XIF2IF_MPS_MASTER");

                    b.ToTable("IF_MPS_MASTER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.IfMpsStage", b =>
                {
                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MpsColorActual")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_color_actual");

                    b.Property<int?>("MpsColorId")
                        .HasColumnType("int")
                        .HasColumnName("mps_color_id");

                    b.Property<string>("MpsColorIp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_color_ip");

                    b.Property<string>("MpsContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_contact");

                    b.Property<int?>("MpsCustId")
                        .HasColumnType("int")
                        .HasColumnName("mps_cust_id");

                    b.Property<string>("MpsCustPono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_cust_pono");

                    b.Property<DateTime?>("MpsDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("mps_due_date");

                    b.Property<string>("MpsGraphicStyle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_graphic_style");

                    b.Property<int?>("MpsGraphicStyleId")
                        .HasColumnType("int")
                        .HasColumnName("mps_graphic_style_id");

                    b.Property<DateTime?>("MpsIndcDate")
                        .HasColumnType("datetime")
                        .HasColumnName("mps_indc_date");

                    b.Property<int?>("MpsMasterId")
                        .HasColumnType("int")
                        .HasColumnName("mps_master_id");

                    b.Property<int?>("MpsOrderQty")
                        .HasColumnType("int")
                        .HasColumnName("mps_order_qty");

                    b.Property<string>("MpsSeason")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_season");

                    b.Property<string>("MpsSeasonYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("mps_season_year");

                    b.Property<DateTime?>("MpsShipOutDate")
                        .HasColumnType("datetime")
                        .HasColumnName("mps_ship_out_date");

                    b.Property<string>("MpsStyle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_style");

                    b.Property<string>("MpsStyleDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mps_style_desc");

                    b.Property<int?>("MpsStyleId")
                        .HasColumnType("int")
                        .HasColumnName("mps_style_id");

                    b.Property<int?>("MpsVendId")
                        .HasColumnType("int")
                        .HasColumnName("mps_vend_id");

                    b.Property<int?>("MpsWoId")
                        .HasColumnType("int")
                        .HasColumnName("mps_wo_id");

                    b.Property<string>("MpsWono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_wono");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.ToTable("IF_MPS_STAGE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.IfMpsStyle", b =>
                {
                    b.Property<int>("MpsStyleId")
                        .HasColumnType("int")
                        .HasColumnName("mps_style_id");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MpsStyle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_style");

                    b.Property<string>("MpsStyleDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mps_style_desc");

                    b.Property<byte[]>("MpsStyleImage")
                        .HasColumnType("image")
                        .HasColumnName("mps_style_image");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("MpsStyleId")
                        .HasName("PK__IF_MPS_S__A812576224927208");

                    b.ToTable("IF_MPS_STYLE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.IfProcess", b =>
                {
                    b.Property<Guid>("ProcessSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_sid");

                    b.Property<DateTime?>("ConfirmDate")
                        .HasColumnType("datetime")
                        .HasColumnName("confirm_date");

                    b.Property<string>("ConfirmUserCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("confirm_user_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime")
                        .HasColumnName("date1");

                    b.Property<DateTime?>("Date2")
                        .HasColumnType("datetime")
                        .HasColumnName("date2");

                    b.Property<DateTime?>("LocalModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("local_modified_date");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("MpsMasterSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("mps_master_sid");

                    b.Property<Guid>("ProcessLibSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_lib_sid");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int?>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal?>("TargetLength")
                        .HasColumnType("numeric(12, 3)")
                        .HasColumnName("target_length");

                    b.Property<int?>("TargetQty")
                        .HasColumnType("int")
                        .HasColumnName("target_qty");

                    b.Property<string>("UserCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_code");

                    b.HasKey("ProcessSid")
                        .HasName("PK__IF_PROCE__442C2E022A4B4B5E");

                    b.HasIndex(new[] { "ProcessLibSid" }, "XIF1IF_PROCESS");

                    b.HasIndex(new[] { "MpsMasterSid" }, "XIF4IF_PROCESS");

                    b.HasIndex(new[] { "UserCode" }, "XIF5IF_PROCESS");

                    b.ToTable("IF_PROCESS", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.IfProcessLibrary", b =>
                {
                    b.Property<Guid>("ProcessLibSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_lib_sid");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Date1Check")
                        .HasColumnType("int")
                        .HasColumnName("date1_check");

                    b.Property<string>("Date1Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date1_name");

                    b.Property<int>("Date2Check")
                        .HasColumnType("int")
                        .HasColumnName("date2_check");

                    b.Property<string>("Date2Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date2_name");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<int>("Percentage1Check")
                        .HasColumnType("int")
                        .HasColumnName("percentage1_check");

                    b.Property<string>("Percentage1Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("percentage1_name");

                    b.Property<int>("ProcessCheck")
                        .HasColumnType("int")
                        .HasColumnName("process_check");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("process_name");

                    b.Property<int>("ProcessUnit")
                        .HasColumnType("int")
                        .HasColumnName("process_unit");

                    b.Property<int>("Qty1Check")
                        .HasColumnType("int")
                        .HasColumnName("qty1_check");

                    b.Property<string>("Qty1UnitName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("qty1_unit_name");

                    b.Property<int?>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("String1Check")
                        .HasColumnType("int")
                        .HasColumnName("string1_check");

                    b.Property<string>("String1Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("string1_name");

                    b.Property<string>("VendCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("vend_code");

                    b.HasKey("ProcessLibSid")
                        .HasName("PK__IF_PROCE__2EB6FD18300424B4");

                    b.HasIndex(new[] { "OrgCode" }, "XIF1IF_PROCESS_LIBRARY");

                    b.HasIndex(new[] { "VendCode", "OrgCode" }, "XIF2IF_PROCESS_LIBRARY");

                    b.ToTable("IF_PROCESS_LIBRARY", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.IfProgress", b =>
                {
                    b.Property<Guid>("ProgressSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("progress_sid");

                    b.Property<DateTime>("BaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("base_date");

                    b.Property<string>("ConfirmComment")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("confirm_comment");

                    b.Property<DateTime?>("ConfirmDate")
                        .HasColumnType("datetime")
                        .HasColumnName("confirm_date");

                    b.Property<string>("ConfirmUserCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("confirm_user_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("LocalModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("local_modified_date");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("MpsColorId")
                        .HasColumnType("int")
                        .HasColumnName("mps_color_id");

                    b.Property<string>("MpsColorIp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_color_ip");

                    b.Property<string>("MpsCustPono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_cust_pono");

                    b.Property<int?>("MpsGraphicStyleId")
                        .HasColumnType("int")
                        .HasColumnName("mps_graphic_style_id");

                    b.Property<DateTime?>("MpsIndcDate")
                        .HasColumnType("datetime")
                        .HasColumnName("mps_indc_date");

                    b.Property<string>("MpsStyle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_style");

                    b.Property<int?>("MpsStyleId")
                        .HasColumnType("int")
                        .HasColumnName("mps_style_id");

                    b.Property<decimal?>("Percentage1")
                        .HasColumnType("numeric(12, 3)")
                        .HasColumnName("percentage1");

                    b.Property<Guid>("ProcessSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_sid");

                    b.Property<decimal?>("Qty1")
                        .HasColumnType("numeric(12, 3)")
                        .HasColumnName("qty1");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("String1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("string1");

                    b.Property<string>("UserCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_code");

                    b.HasKey("ProgressSid")
                        .HasName("PK__IF_PROGR__9378576A35BCFE0A");

                    b.HasIndex(new[] { "ProcessSid" }, "XIF1IF_PROGRESS");

                    b.HasIndex(new[] { "UserCode" }, "XIF2IF_PROGRESS");

                    b.ToTable("IF_PROGRESS", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TaCodeMapping", b =>
                {
                    b.Property<string>("Class")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("class");

                    b.Property<string>("OldCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("old_code");

                    b.Property<string>("NewCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("new_code");

                    b.HasKey("Class", "OldCode");

                    b.ToTable("TA_CODE_MAPPING", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TaGeneralCode", b =>
                {
                    b.Property<string>("Class")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("class");

                    b.Property<string>("Code")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int?>("SortNo")
                        .HasColumnType("int")
                        .HasColumnName("sort_no");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Value1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("value_1");

                    b.Property<string>("Value2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("value_2");

                    b.Property<string>("Value3")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("value_3");

                    b.HasKey("Class", "Code")
                        .HasName("PK__TA_GENER__E288AC23681373AD");

                    b.ToTable("TA_GENERAL_CODE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TaPermission", b =>
                {
                    b.Property<string>("SysCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sys_code");

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<string>("PgmCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pgm_code");

                    b.Property<string>("ClearYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("clear_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("CopyYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("copy_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("DeleteYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("delete_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("DetailYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("detail_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("ExcelYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("excel_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("HelpYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("help_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("InquiryYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("inquiry_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("NewYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("new_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("OpenYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("open_yn")
                        .HasDefaultValueSql("('Y')");

                    b.Property<string>("PrintYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("print_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("SaveYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("save_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("SearchYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("search_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("UploadYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("upload_yn")
                        .HasDefaultValueSql("('N')");

                    b.HasKey("SysCode", "GroupCode", "PgmCode")
                        .HasName("PK__TA_PERMI__6F493C5844CA3770");

                    b.ToTable("TA_PERMISSION", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TaProgram", b =>
                {
                    b.Property<string>("SysCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sys_code");

                    b.Property<string>("PgmCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pgm_code");

                    b.Property<string>("ClearYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("clear_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("CopyYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("copy_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("DeleteYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("delete_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("DetailYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("detail_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("ExcelYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("excel_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("FormId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("form_id");

                    b.Property<string>("HelpYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("help_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("InquiryYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("inquiry_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("NewYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("new_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("PgmLevel")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("pgm_level");

                    b.Property<string>("PgmModule")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("pgm_module");

                    b.Property<string>("PgmName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pgm_name");

                    b.Property<string>("PgmType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("pgm_type");

                    b.Property<string>("PrintYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("print_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<string>("SaveYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("save_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("SearchYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("search_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<int?>("SortNo")
                        .HasColumnType("int")
                        .HasColumnName("sort_no");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UploadYn")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("upload_yn")
                        .HasDefaultValueSql("('N')");

                    b.Property<string>("UpperPgmCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("upper_pgm_code");

                    b.HasKey("SysCode", "PgmCode")
                        .HasName("PK__TA_PROGR__ACD370E056E8E7AB");

                    b.ToTable("TA_PROGRAM", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TaPwConfirmSentence", b =>
                {
                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("type");

                    b.Property<byte[]>("ConfirmKey")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("confirm_key");

                    b.Property<byte[]>("ConfirmSentence")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("confirm_sentence");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.HasKey("Type");

                    b.ToTable("TA_PW_CONFIRM_SENTENCE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TaUser", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("user_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("CustCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cust_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("char(18)")
                        .HasColumnName("empl_code")
                        .IsFixedLength();

                    b.Property<string>("GroupCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<string>("MpsId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_id");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("OtherOrgCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("other_org_code");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("PayrollOrgOnly")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("payroll_org_only");

                    b.Property<string>("PriorityLevel")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("priority_level")
                        .HasDefaultValueSql("('0')");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.Property<string>("VendCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("vend_code");

                    b.HasKey("UserCode")
                        .HasName("PK__TA_USER__EDC4140E3C69FB99");

                    b.HasIndex(new[] { "CustCode", "OrgCode" }, "XIF1TA_USER");

                    b.HasIndex(new[] { "VendCode", "OrgCode" }, "XIF2TA_USER");

                    b.HasIndex(new[] { "OrgCode" }, "XIF3TA_USER");

                    b.ToTable("TA_USER", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TaUserGroup", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("user_code");

                    b.Property<string>("SysCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sys_code");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("group_code");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.HasKey("UserCode", "SysCode")
                        .HasName("PK__TA_USER___0523AFDA22751F6C");

                    b.ToTable("TA_USER_GROUP", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TaVersion", b =>
                {
                    b.Property<string>("SysId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sys_id");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("source");

                    b.Property<string>("DllYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("dll_yn");

                    b.Property<string>("LocalPath")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("local_path");

                    b.Property<string>("ServerPath")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("server_path");

                    b.Property<string>("Version")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("version");

                    b.HasKey("SysId", "Source")
                        .HasName("PK__TA_VERSI__8A08B5C14222D4EF");

                    b.ToTable("TA_VERSION", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TempInsSurf09162022", b =>
                {
                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<int?>("Chi20Over")
                        .HasColumnType("int");

                    b.Property<int?>("Chi20Under")
                        .HasColumnType("int");

                    b.Property<double?>("ChildAge")
                        .HasColumnType("float");

                    b.Property<string>("CovType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("empl_code");

                    b.Property<string>("InsuredEmployee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MainName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("RateCate")
                        .HasColumnType("float")
                        .HasColumnName("rate_cate");

                    b.Property<double?>("SpAge")
                        .HasColumnType("float");

                    b.Property<decimal?>("_6bnt")
                        .HasColumnType("money")
                        .HasColumnName("6BNT");

                    b.Property<decimal?>("_6brt")
                        .HasColumnType("money")
                        .HasColumnName("6BRT");

                    b.Property<decimal?>("_6buh")
                        .HasColumnType("money")
                        .HasColumnName("6BUH");

                    b.ToTable("TempInsSurf09162022", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TempInsSurf10112018", b =>
                {
                    b.Property<double?>("Age")
                        .HasColumnType("float")
                        .HasColumnName("age");

                    b.Property<double?>("Chi20Over")
                        .HasColumnType("float");

                    b.Property<double?>("Chi20Under")
                        .HasColumnType("float");

                    b.Property<double?>("ChildAge")
                        .HasColumnType("float");

                    b.Property<string>("CovType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("empl_code");

                    b.Property<string>("InsuredEmployee")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MainName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("RateCate")
                        .HasColumnType("float")
                        .HasColumnName("rate_cate");

                    b.Property<double?>("SpAge")
                        .HasColumnType("float");

                    b.Property<decimal?>("_3009")
                        .HasColumnType("money")
                        .HasColumnName("3009");

                    b.Property<decimal?>("_300d")
                        .HasColumnType("money")
                        .HasColumnName("300D");

                    b.Property<decimal?>("_301d")
                        .HasColumnType("money")
                        .HasColumnName("301D");

                    b.Property<decimal?>("_301r")
                        .HasColumnType("money")
                        .HasColumnName("301R");

                    b.Property<decimal?>("_301v")
                        .HasColumnType("money")
                        .HasColumnName("301V");

                    b.Property<decimal?>("_302g")
                        .HasColumnType("money")
                        .HasColumnName("302G");

                    b.Property<decimal?>("_302q")
                        .HasColumnType("money")
                        .HasColumnName("302Q");

                    b.Property<decimal?>("_303f")
                        .HasColumnType("money")
                        .HasColumnName("303F");

                    b.Property<decimal?>("_304m")
                        .HasColumnType("money")
                        .HasColumnName("304M");

                    b.Property<decimal?>("_304r")
                        .HasColumnType("money")
                        .HasColumnName("304R");

                    b.Property<decimal?>("_304v")
                        .HasColumnType("money")
                        .HasColumnName("304V");

                    b.Property<decimal?>("_304z")
                        .HasColumnType("money")
                        .HasColumnName("304Z");

                    b.Property<decimal?>("_3057")
                        .HasColumnType("money")
                        .HasColumnName("3057");

                    b.ToTable("TempInsSurf10112018", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TempInsSurfFor2024", b =>
                {
                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<int?>("Chi20Over")
                        .HasColumnType("int");

                    b.Property<int?>("Chi20Under")
                        .HasColumnType("int");

                    b.Property<int?>("ChildAge")
                        .HasColumnType("int");

                    b.Property<string>("CovType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("InsuredEmployee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MainName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("RateCate")
                        .HasColumnType("float")
                        .HasColumnName("rate_cate");

                    b.Property<int?>("SpAge")
                        .HasColumnType("int");

                    b.Property<decimal?>("_6rhb")
                        .HasColumnType("money")
                        .HasColumnName("6RHB");

                    b.Property<decimal?>("_6rhz")
                        .HasColumnType("money")
                        .HasColumnName("6RHZ");

                    b.Property<decimal?>("_8nag")
                        .HasColumnType("money")
                        .HasColumnName("8NAG");

                    b.ToTable("TempInsSurfFor2024", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TempInsurancePlan2024", b =>
                {
                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("_6rhb")
                        .HasColumnType("money")
                        .HasColumnName("6RHB");

                    b.Property<decimal?>("_6rhz")
                        .HasColumnType("money")
                        .HasColumnName("6RHZ");

                    b.Property<decimal?>("_8nag")
                        .HasColumnType("money")
                        .HasColumnName("8NAG");

                    b.ToTable("tempInsurancePlan2024", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.TempInsurePlan2023", b =>
                {
                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("_6bnt")
                        .HasColumnType("money")
                        .HasColumnName("6BNT");

                    b.Property<decimal?>("_6brt")
                        .HasColumnType("money")
                        .HasColumnName("6BRT");

                    b.Property<decimal?>("_6buh")
                        .HasColumnType("money")
                        .HasColumnName("6BUH");

                    b.ToTable("tempInsurePlan2023", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.VEmployee", b =>
                {
                    b.Property<string>("ActiveYn")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("active_yn");

                    b.Property<string>("ComEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("com_email");

                    b.Property<string>("ComTel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("com_tel");

                    b.Property<string>("ComTelExt")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("com_tel_ext");

                    b.Property<string>("DeptName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dept_name");

                    b.Property<string>("DeptName2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dept_name_2");

                    b.Property<string>("DivName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("div_name");

                    b.Property<string>("EmplCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<string>("EmplName")
                        .HasMaxLength(101)
                        .IsUnicode(false)
                        .HasColumnType("varchar(101)")
                        .HasColumnName("empl_name");

                    b.Property<string>("EmplType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_type");

                    b.Property<string>("Org")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org");

                    b.ToTable((string)null);

                    b.ToView("V_EMPLOYEE", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.VwOpIfProcess", b =>
                {
                    b.Property<DateTime?>("ConfirmDate")
                        .HasColumnType("datetime")
                        .HasColumnName("confirm_date");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<DateTime?>("Date1")
                        .HasColumnType("datetime")
                        .HasColumnName("date1");

                    b.Property<DateTime?>("Date2")
                        .HasColumnType("datetime")
                        .HasColumnName("date2");

                    b.Property<DateTime?>("LocalModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("local_modified_date");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<int>("MpsMasterId")
                        .HasColumnType("int")
                        .HasColumnName("mps_master_id");

                    b.Property<Guid>("MpsMasterSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("mps_master_sid");

                    b.Property<Guid>("ProcessLibSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_lib_sid");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("process_name");

                    b.Property<Guid>("ProcessSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("process_sid");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<int?>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal?>("TargetLength")
                        .HasColumnType("numeric(12, 3)")
                        .HasColumnName("target_length");

                    b.Property<int?>("TargetQty")
                        .HasColumnType("int")
                        .HasColumnName("target_qty");

                    b.Property<string>("UserCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_code");

                    b.ToTable((string)null);

                    b.ToView("vw_OP_IF_Process", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.VwOpMpsmaster", b =>
                {
                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CustCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cust_code");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("MpsContact")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_contact");

                    b.Property<int>("MpsMasterId")
                        .HasColumnType("int")
                        .HasColumnName("mps_master_id");

                    b.Property<Guid>("MpsMasterSid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("mps_master_sid");

                    b.Property<string>("MpsSeason")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_season");

                    b.Property<string>("MpsSeasonyear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("mps_seasonyear");

                    b.Property<string>("MpsStyle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_style");

                    b.Property<string>("MpsStyleDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("mps_style_desc");

                    b.Property<int?>("MpsStyleId")
                        .HasColumnType("int")
                        .HasColumnName("mps_style_id");

                    b.Property<int?>("MpsTotalOrderQty")
                        .HasColumnType("int")
                        .HasColumnName("mps_total_order_qty");

                    b.Property<string>("MpsWono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mps_wono");

                    b.Property<decimal?>("MpsYardPcs")
                        .HasColumnType("numeric(12, 3)")
                        .HasColumnName("mps_yard_pcs");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("VendCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("vend_code");

                    b.ToTable((string)null);

                    b.ToView("vw_OP_MPSMaster", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.Entities.XxLabel", b =>
                {
                    b.Property<string>("Class")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("class");

                    b.Property<int?>("ClassSn")
                        .HasColumnType("int")
                        .HasColumnName("class_sn");

                    b.Property<string>("Company")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("company");

                    b.Property<string>("Dept")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("dept");

                    b.Property<double?>("EmplCode")
                        .HasColumnType("float")
                        .HasColumnName("empl_code");

                    b.Property<string>("EmplName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("empl_name");

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("manufacturer");

                    b.Property<string>("Model")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("model");

                    b.Property<string>("OtherName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("other_name");

                    b.Property<string>("ProductSn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("product_sn");

                    b.Property<string>("PropertyName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("property_name");

                    b.Property<string>("PropertyType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("property_type");

                    b.Property<string>("Purpose")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("purpose");

                    b.Property<string>("Remark")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("remark");

                    b.Property<int?>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<string>("Specification")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("specification");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("update_date");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("user_name");

                    b.ToTable("XX_Label", (string)null);
                });

            modelBuilder.Entity("MiasHR.Api.HrPayroll", b =>
                {
                    b.Property<string>("OrgCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("org_code");

                    b.Property<string>("EmplCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("empl_code");

                    b.Property<int>("Seq")
                        .HasColumnType("int")
                        .HasColumnName("seq");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("CreatedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("created_user");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_date");

                    b.Property<string>("ModifiedUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("modified_user");

                    b.Property<decimal?>("Oth1IncreasePer")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("oth1_increase_per");

                    b.Property<decimal?>("Oth1PayrollMonthly")
                        .HasColumnType("money")
                        .HasColumnName("oth1_payroll_monthly");

                    b.Property<string>("Oth1PayrollName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth1_payroll_name");

                    b.Property<string>("Oth1StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth1_start_month");

                    b.Property<decimal?>("Oth2IncreasePer")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("oth2_increase_per");

                    b.Property<decimal?>("Oth2PayrollMonthly")
                        .HasColumnType("money")
                        .HasColumnName("oth2_payroll_monthly");

                    b.Property<string>("Oth2PayrollName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth2_payroll_name");

                    b.Property<string>("Oth2StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth2_start_month");

                    b.Property<decimal?>("Oth3IncreasePer")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("oth3_increase_per");

                    b.Property<decimal?>("Oth3PayrollMonthly")
                        .HasColumnType("money")
                        .HasColumnName("oth3_payroll_monthly");

                    b.Property<string>("Oth3PayrollName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("oth3_payroll_name");

                    b.Property<string>("Oth3StartMonth")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("oth3_start_month");

                    b.Property<byte[]>("PayrollAnnual")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("payroll_annual");

                    b.Property<byte[]>("PayrollBiweekly")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("payroll_biweekly");

                    b.Property<byte[]>("PayrollHourly")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("payroll_hourly");

                    b.Property<decimal?>("PayrollIncreasePer")
                        .HasColumnType("decimal(7, 2)")
                        .HasColumnName("payroll_increase_per");

                    b.Property<byte[]>("PayrollMonthly")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("payroll_monthly");

                    b.Property<byte[]>("PayrollSemimonthly")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("payroll_semimonthly");

                    b.Property<string>("PayrollStartDate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("payroll_start_date");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("remark");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("status");

                    b.HasKey("OrgCode", "EmplCode", "Seq");

                    b.ToTable("HR_PAYROLL", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
