@attribute [Authorize]

@using MiasHR.Web.Services.Contracts;

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<MudMenu Icon="@Icons.Material.Filled.AccountCircle" Variant="Variant.Filled" Color="Color.Primary" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopRight">
    <ActivatorContent>
        <MudAvatar Image="@img" />
    </ActivatorContent>
    <ChildContent>
        <MudContainer Class="d-flex justify-content-center">
            <MudAvatar Size="Size.Large" Image="@img" Class="mt-2 justify-content-center" />
        </MudContainer>
        <MudText Typo="Typo.body1" Class="m-4 mb-2"><b>Hello, @userName</b></MudText>
@*         <MudMenuItem Href="/profile" Match="NavLinkMatch.Prefix">Profile</MudMenuItem>
        <MudMenuItem Href="/profile/history" Match="NavLinkMatch.Prefix">History</MudMenuItem> *@
        <MudMenuItem Href="/changepassword" Match="NavLinkMatch.Prefix">Change Password</MudMenuItem>
        <MudMenuItem @onclick="HandleLogout" Match="NavLinkMatch.Prefix">Logout</MudMenuItem>
    </ChildContent>
</MudMenu>

@code {
    private string img = "images/happy.jpg";
    private string userName = "Unknown";

    private void HandleLogout()
    {
        // Remove JWT from session storage & http bearer
        AuthService.Logout();

        // Redirect the user to the login page
        NavigationManager.NavigateTo("/login");
    }

    protected override async Task OnInitializedAsync()
    {
        var curUserName = await AuthService.GetUserName();

        if (curUserName != null)
        {
            userName = curUserName;
        }
    }
}