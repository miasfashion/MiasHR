@page "/daytimeoff/list"

@attribute [Authorize]

@inject NavigationManager NavigationManager
@inject IDialogService DialogService

<PageTitle>Day Time Off Requests</PageTitle>
<MudStack Row="true">
    <MudBreadcrumbs Items="_breadcrumbs" Class="justify-start" />
    <MudSpacer />
    <MudButton OnClick="Request" Variant="Variant.Filled" Color="Color.Secondary"
               Style="width: 200px; height: 60px;">
        Request Time Off
    </MudButton>
</MudStack>
<MudContainer Class="d-block">
    <MudContainer Class="d-flex">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudPaper Elevation=0 MinWidth="195px"> </MudPaper>
        </MudHidden>
        <MudText Class="ml-2" Typo="Typo.h4">Day Time Off Request List</MudText>
    </MudContainer>
    <MudContainer Class="d-flex">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudPaper Elevation="0">
                <MudTabs Outlined="true" Position="Position.Left" Rounded="true" Border="false"
                @bind-ActivePanelIndex="activeIndex" Style="position:sticky; top: 120px;" Class="ma-4">
                    <MudTabPanel OnClick="navPage" Text="Information" />
                    <MudTabPanel OnClick="navPage" Text="Request List" />
                </MudTabs>
            </MudPaper>
        </MudHidden>
        <MudPaper Class="d-flex flex-wrap flex-grow-1" Elevation="0">
            <MudPaper Class="mt-4 ma-2" Elevation="0">
                <MudTable Items="@employeeDayTimeOffRequests">
                    <HeaderContent>
                        <MudTh>Date</MudTh>
                        <MudTh>Type</MudTh>
                        <MudTh>Used Days</MudTh>
                        <MudTh>Remark</MudTh>
                        <MudTh>From</MudTh>
                        <MudTh>To</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Date">@context.Date</MudTd>
                        <MudTd DataLabel="Type">@context.Type</MudTd>
                        <MudTd DataLabel="UsedDays">@context.UsedDays</MudTd>
                        <MudTd DataLabel="Remark">@context.Remark</MudTd>
                        <MudTd DataLabel="From">@context.From</MudTd>
                        <MudTd DataLabel="To">@context.To</MudTd>
                    </RowTemplate>
                </MudTable>
            </MudPaper>
        </MudPaper>
    </MudContainer>
</MudContainer>
    @code {

    // Breadcrumbs
    private List<BreadcrumbItem> _breadcrumbs = new List<BreadcrumbItem>()
    {
        new BreadcrumbItem("Home", href: "/home"),
        new BreadcrumbItem("Request List", href: null, disabled: true)
    };

    public class employeeDayTimeOffRequest
    {
        public DateOnly Date { get; set; }
        public string? Type { get; set; }
        public decimal UsedDays { get; set; }
        public string? Remark { get; set; }
        public DateTime From { get; set; }
        public DateTime To { get; set; }
    }

    List<employeeDayTimeOffRequest> employeeDayTimeOffRequests = new List<employeeDayTimeOffRequest>
    {
        new employeeDayTimeOffRequest { Date=new DateOnly(2023,9,11), Type="Business Related", UsedDays=5.25M, Remark="Remote work", From = new DateTime(2023,12,22,8,0,0), To = new DateTime(2023,12,30,10,0,0)},
        new employeeDayTimeOffRequest { Date=new DateOnly(2023,11,22), Type="VAC", UsedDays= 1, Remark="Vacation", From = new DateTime(2023,12,24,0,0,0), To = new DateTime(2023,12,25,0,0,0)},
        new employeeDayTimeOffRequest { Date=new DateOnly(2023,11,30), Type="Business Related", UsedDays=0.25M, Remark="Remote work", From = new DateTime(2023,12,31,13,0,0), To = new DateTime(2023,12,31,15,0,0)}
    };

    // Navigation Tab
    int activeIndex = 1;
    private void navPage()
    {
        if (activeIndex == 0)
        {
            NavigationManager.NavigateTo("/daytimeoff/info");
        }
        else if (activeIndex == 1)
        {
            NavigationManager.NavigateTo("/daytimeoff/list");
        }
    }

    //DayTimeOff Request
    private void Request()
    {
        var parameters = new DialogParameters<DayTimeOffRequest>();
        parameters.Add(x => x.ContentText, "New Time Off Request");
        parameters.Add(x => x.ButtonText, "Confirm");
        parameters.Add(x => x.Color, Color.Success);

        var options = new DialogOptions { MaxWidth = MudBlazor.MaxWidth.Medium, FullWidth = true, DisableBackdropClick = true };

        DialogService.Show<DayTimeOffRequest>("New Time Off Request", parameters, options);
    }
}
