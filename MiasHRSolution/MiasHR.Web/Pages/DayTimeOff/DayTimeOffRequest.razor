@attribute [Authorize]

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem xs="6">
                <MudPaper Class="pa-4">
                    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                        <MudSelect @bind-Value="typeValue" T="string" Label="Type" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Required="true" Class="ma-4">
                            <MudSelectItem T="string" Value="@("Vacation")" />
                            <MudSelectItem T="string" Value="@("Sick Day")" />
                            <MudSelectItem T="string" Value="@("Absence")" />
                        </MudSelect>
                        <MudContainer Class="d-flex mt-4 mb-4">
                            <MudRadioGroup @bind-SelectedOption="@PTOOption">
                                <MudRadio Option="@("DAY")" Color="Color.Secondary" UnCheckedColor="Color.Default">DAY OFF</MudRadio>
                                <MudRadio Option="@("AMPM")" Color="Color.Secondary" UnCheckedColor="Color.Default">AM/PM</MudRadio>
                                <MudRadio Option="@("HOUR")" Color="Color.Secondary" UnCheckedColor="Color.Default">HOUR</MudRadio>
                            </MudRadioGroup>
                        </MudContainer>
                        <MudContainer Class="d-flex mt-4 mb-4">
                            <MudRadioGroup @bind-SelectedOption="@hourOption">
                                <MudRadio Option="@("2 Hrs")" Color="Color.Secondary" UnCheckedColor="Color.Default">2 Hrs</MudRadio>
                                <MudRadio Option="@("4 Hrs")" Color="Color.Secondary" UnCheckedColor="Color.Default">4 Hrs</MudRadio>
                                <MudRadio Option="@("6 Hrs")" Color="Color.Secondary" UnCheckedColor="Color.Default">6 Hrs</MudRadio>
                            </MudRadioGroup>
                        </MudContainer>
                        @if (typeValue.Equals("Absence"))
                        {
                            <MudSelect @bind-Value="reasonValue" T="string" Label="Reason" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Required="true" Class="ma-4">
                                <MudSelectItem Value="@("Absence Report")" />
                            </MudSelect>
                        }
                        else if (typeValue.Equals("Sick Day"))
                        {
                            <MudSelect @bind-Value="reasonValue" T="string" Label="Reason" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Required="true" Class="ma-4">
                                <MudSelectItem Value="@("Sick Day")" />
                            </MudSelect>
                        }
                        else
                        {
                            <MudSelect @bind-Value="reasonValue" T="string" Label="Reason" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" Required="true" Class="ma-4">
                                <MudSelectItem Value="@("Vacation")" />
                                <MudSelectItem Value="@("Personal Matters")" />
                                <MudSelectItem Value="@("Sick Day")" />
                                <MudSelectItem Value="@("Business Related")" />
                                <MudSelectItem Value="@("Death in Family")" />
                                <MudSelectItem Value="@("Jury Duty / Witness")" />
                                <MudSelectItem Value="@("Maternity / Paternity")" />
                                <MudSelectItem Value="@("Other")" />
                            </MudSelect>
                        }
                        <MudTextField T="string" Label="About" AutoGrow Lines="3" HelperText="Include information for approver" HelperTextOnFocus="true" Variant="Variant.Outlined" Class="ma-4" />
                    </MudForm>
                </MudPaper>
            </MudItem>
            <MudItem xs="6">
                <MudContainer Class="d-flex flex-grow-1 flex-column">
                    <MudPaper Class="flex-grow-1 mb-4 pa-4">
                        <MudText Class="mb-2">Vacation Available</MudText>
                        <MudTable Items="@vacAvailable">
                            <HeaderContent>
                                <MudTh>Type</MudTh>
                                <MudTh>Days</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Days">@context.Type</MudTd>
                                    <MudTd DataLabel="Days">@context.Days</MudTd>
                                </RowTemplate>
                            </MudTable>
                        </MudPaper>
                        <MudPaper Class="flex-grow-1 mb-4 pa-4">
                            <MudText Class="mb-2">Current Usage</MudText>
                            <MudTable Items="@vacUsed">
                                <HeaderContent>
                                    <MudTh>Type</MudTh>
                                    <MudTh>Days</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Days">@context.Type</MudTd>
                                    <MudTd DataLabel="Days">@context.Days</MudTd>
                                </RowTemplate>
                            </MudTable>
                        </MudPaper>
                    </MudContainer>
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="@Color" Variant="Variant.Filled" OnClick="Submit">@ButtonText</MudButton>
        </DialogActions>
    </MudDialog>
    @code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string ContentText { get; set; }
    [Parameter] public string ButtonText { get; set; }
    [Parameter] public Color Color { get; set; }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();


    private bool success;
    string[] errors = { };
    MudForm form;
    public string hourOption { get; set; }
    public string ampmOption { get; set; }
    public string PTOOption { get; set; }
    
    private string typeValue = string.Empty;
    private string reasonValue;
    private DateTime? startDate = DateTime.Today;
    private TimeSpan? startTime = new TimeSpan(08, 00, 00);
    private DateTime? endDate = DateTime.Today;
    private TimeSpan? endTime = new TimeSpan(17, 00, 00);

    public class vacDays
    {
        public string? Type { get; set; }
        public decimal Days { get; set; }
    }

    List<vacDays> vacAvailable = new List<vacDays>
    {
        new vacDays { Type="Vacation", Days=5m},
        new vacDays { Type="Sick Days", Days=4m}
    };

    List<vacDays> vacUsed = new List<vacDays>
    {
        new vacDays { Type="Vacation", Days=1m},
        new vacDays { Type="Sick Days", Days=0m}
    };
}
