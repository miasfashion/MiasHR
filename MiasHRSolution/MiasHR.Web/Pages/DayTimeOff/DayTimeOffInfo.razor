@page "/daytimeoff/info"
@inject NavigationManager NavigationManager

<PageTitle>Day Time Off Information</PageTitle>
<MudContainer Class="mt-16 px-8" MaxWidth="MudBlazor.MaxWidth.False">
    <MudBreadcrumbs Items="_breadcrumbs" />
    
    @* TODO: Set name to user name *@
    
    
    <MudContainer Class="d-inline-flex">
        <MudPaper Elevation="0">
            <MudTabs Outlined="true" Position="Position.Left" Rounded="true" Border="false"
            @bind-ActivePanelIndex="activeIndex" Class="ma-4">
                <MudTabPanel OnClick="navPage" Text="Information" />
                <MudTabPanel OnClick="navPage" Text="Request List" />
            </MudTabs>
        </MudPaper>

        <MudPaper Class="ma-4 pa-4" Elevation="0">
            <MudTable Items="@employeeDayTimeOff">
                <HeaderContent>
                    <MudTh>Type</MudTh>
                    <MudTh>Days</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Type">@context.Type</MudTd>
                    <MudTd DataLabel="Days">@context.Days</MudTd>
                </RowTemplate>
            </MudTable>
        </MudPaper>
    </MudContainer>
</MudContainer>

@code {
    private bool dense = true;
    private bool hover = true;
    private bool strip = true;

    @*TODO: This is probably where all the data collecting before displaying on the screen
            takes place. How can you use API to gather information?*@
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    public class EmployeeDayTimeOff
    {
        public string Type { get; set; }
        public decimal Days { get; set; }
    }

    List<EmployeeDayTimeOff> employeeDayTimeOff = new List<EmployeeDayTimeOff>()
    {
        new EmployeeDayTimeOff {Type="Carried Over", Days = 0},
        new EmployeeDayTimeOff {Type="Current Year", Days = 0},
        new EmployeeDayTimeOff {Type="Current Accrued", Days = 0},
        new EmployeeDayTimeOff {Type="Adjust Days", Days = 0},
        new EmployeeDayTimeOff {Type="Used Days", Days = 0},
        new EmployeeDayTimeOff {Type="Year End Available", Days = 0},
        new EmployeeDayTimeOff {Type="Current Available", Days = 0},
        new EmployeeDayTimeOff {Type="Sick Days", Days = 0},
        new EmployeeDayTimeOff {Type="Sick Days Used", Days = 0},
        new EmployeeDayTimeOff {Type="Sick Days Available", Days = 0}
    };

    // Breadcrumbs
    private List<BreadcrumbItem> _breadcrumbs = new List<BreadcrumbItem>()
    {
        new BreadcrumbItem("Home", href: "/"),
        new BreadcrumbItem("Day Time Off Information", href: null, disabled: true)
    };

    // Navigation Tab
    int activeIndex = 0;
    private void navPage()
    {
        if (activeIndex == 0)
        {
            NavigationManager.NavigateTo("/daytimeoff/info");
        }
        else if (activeIndex == 1)
        {
            NavigationManager.NavigateTo("/daytimeoff/list");
        }
    }
}
