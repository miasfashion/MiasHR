@page "/forgotPW"

@attribute [AllowAnonymous]

@layout LoginLayout
@using MiasHR.Models.DTOs
@using Microsoft.AspNetCore.Components
@using MiasHR.Web.Services.Contracts
@using System.Text.RegularExpressions

@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@inject ISnackbar Snackbar

<PageTitle>Forgot Password</PageTitle>

<MudPaper Class="pa-5 m-5">
    <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
        @*Check *@
        <MudTextField T="string" Label="User Email" HelperText="Use your Company Email" @bind-Value="userInfo.Username"
                      InputType="InputType.Email" Required="true"
                      RequiredError="Type your Company Email!" />
        <MudTextField T="DateTime" Format="yyyy-MM-dd" Label="Birth Date" InputType="InputType.Date" Required="true" @bind-Value="birth"
                      RequiredError="Type your Birth Date!" />
        <div class="d-flex m-2 align-center justify-space-between">
            <MudButton OnClick="CheckUserExist" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Validate</MudButton>
        </div>
    </MudForm>

</MudPaper>

@code {
    private UserCheckDTO userInfo = new UserCheckDTO();
    bool success;
    string[] errors = { };
    DateTime birth;
    MudForm? form;

    //Check if user exists 
    private async Task CheckUserExist()
    {
        try
        {
            userInfo.Birthdate = DateOnly.FromDateTime(birth);
            var result = await AuthService.GetUserExist(userInfo);

            // Getting result message stored to show in snackbar
            string msg = await result.Content.ReadAsStringAsync();
            if (result.IsSuccessStatusCode && string.Equals(msg, "success", StringComparison.OrdinalIgnoreCase))
            {
                NavigationManager.NavigateTo("/changePW");
                Snackbar.Add("Account has been successfully created.");
            }
            else
            {
                Snackbar.Add(msg);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during registration: {ex.Message}");
            Snackbar.Add("An error occurred during registration.");
        }
    }
}