@page "/manager/daytimeoff/history"

@attribute [Authorize(Roles = "Manager")]

@using MiasHR.Models.DTOs;
@using MiasHR.Web.Services.Contracts;

@inject NavigationManager NavigationManager
@inject IDayTimeOffRequestService DayTimeOffRequestService
@inject IAuthService AuthService

<PageTitle>Manage Day Time Off History</PageTitle>
<MudBreadcrumbs Items="_breadcrumbs" />
<MudContainer Class="d-block">
    <MudContainer Class="d-flex">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudPaper Elevation=0 MinWidth="195px"> </MudPaper>
        </MudHidden>
        <MudText Class="ml-4" Typo="Typo.h4">Day Time Off History</MudText>
    </MudContainer>
    <MudContainer Class="d-flex">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudPaper Elevation="0">
                <MudTabs Outlined="true" Position="Position.Left" Rounded="true" Border="false"
                @bind-ActivePanelIndex="activeIndex" Style="position:sticky; top: 120px;" Class="ma-4">
                    <MudTabPanel OnClick="navPage" Text="Requests" />
                    <MudTabPanel OnClick="navPage" Text="History" />
                </MudTabs>
            </MudPaper>
        </MudHidden>
        <MudPaper Class="d-flex flex-wrap flex-grow-1" Elevation="0">
            <MudTable Items="@approvalHistory">
                <HeaderContent>
                    <MudTh>Request Date</MudTh>
                    <MudTh>Name</MudTh>
                    <MudTh>Type</MudTh>
                    <MudTh>From</MudTh>
                    <MudTh>To</MudTh>
                    <MudTh>First Approval</MudTh>
                    <MudTh>Second Approval</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="ReqDate">@context.req_date</MudTd>
                    <MudTd DataLabel="Name">@context.empl_name</MudTd>
                    <MudTd DataLabel="Type">@context.req_type</MudTd>
                    <MudTd DataLabel="From">@context.period_from</MudTd>
                    <MudTd DataLabel="To">@context.period_to</MudTd>
                    <MudTd DataLabel="FirstApproval">@context.approve_1st_yn</MudTd>
                    <MudTd DataLabel="SecondApproval">@context.approve_2nd_yn</MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    <MudPaper Height="100px" Elevation="0">
                        <MudText>No approvals yet</MudText>
                    </MudPaper>
                </NoRecordsContent>
            </MudTable>
        </MudPaper>
    </MudContainer>
</MudContainer>


@code {
    private IReadOnlyList<DayTimeOffApprovalHistoryDTO> approvalHistory = new List<DayTimeOffApprovalHistoryDTO>();

    // public class ApprovalRecord
    // {
    //     public DateTime DateTime { get; set; }
    //     public string Name { get; set; }
    //     public string Type { get; set; }
    //     public DateTime From { get; set; }
    //     public DateTime To { get; set; }
    //     public bool FirstApproval { get; set; }
    //     public bool SecondApproval { get; set; }
    // }
    
    // List<ApprovalRecord> ApprovalHistory = new List<ApprovalRecord>
    // {
    //     new ApprovalRecord {DateTime=new DateTime(2023,11,22,11,00,00), Name="Sam Kim", Type="Sick Leave",
    //                         From=new DateTime(2023,12,22,8,0,0),To=new DateTime(2023,12,30,10,0,0), FirstApproval=true, SecondApproval=true},
    //     new ApprovalRecord {DateTime=new DateTime(2023,11,22,11,00,00), Name="Darren Kim", Type="Sick Leave",
    //                         From= new DateTime(2023,12,24,0,0,0),To=new DateTime(2023,12,25,0,0,0), FirstApproval=true, SecondApproval=true},
    //     new ApprovalRecord {DateTime=new DateTime(2023,11,22,11,00,00), Name="Carol Kim", Type="Sick Leave",
    //                          From=new DateTime(2023,12,31,13,0,0),To=new DateTime(2023,12,31,15,0,0), FirstApproval=true, SecondApproval=true}
    // };

    // Breadcrumbs
    private List<BreadcrumbItem> _breadcrumbs = new List<BreadcrumbItem>()
    {
        new BreadcrumbItem("Home", href: "/"),
        new BreadcrumbItem("Manager", href: "/manager/home"),
        new BreadcrumbItem("Day Time Off Request History", href: null, disabled: true)
    };

    // Navigation Tab
    int activeIndex = 1;
    private void navPage()
    {
        if (activeIndex == 0)
        {
            NavigationManager.NavigateTo("/manager/daytimeoff/requests");
        }
        else if (activeIndex == 1)
        {
            NavigationManager.NavigateTo("/manager/daytimeoff/history");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var managerEmplCode = await AuthService.GetUserEmplCode();

        if (managerEmplCode != null)
        {
           approvalHistory = await DayTimeOffRequestService.GetHrDayTimeOffApprovalHistory(managerEmplCode);
        }
    }
}
