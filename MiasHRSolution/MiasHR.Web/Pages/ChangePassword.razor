@page "/forgotPW/changePW"

@layout LoginLayout
@using MiasHR.Models.DTOs
@using Microsoft.AspNetCore.Components
@using MiasHR.Models
@using System.Net

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject IConfiguration Configuration

<PageTitle>Change Password</PageTitle>

<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                            <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="pwField1"
                                          InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon"
                                          OnAdornmentClick="PWVisibilityClick" AdornmentAriaLabel="Check Password"
                                          Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                                          RequiredError="Type New Password!" />
                            <MudTextField T="string" Label="Password" HelperText="Repeat the password"
                                          InputType="@PasswordCheckInput" Adornment="Adornment.End" AdornmentIcon="@PasswordCheckIcon"
                                          OnAdornmentClick="PWCheckVisibilityClick" AdornmentAriaLabel="Check Password"
                                          Validation="@(new Func<string, string>(PasswordMatch))" Required="true"
                                          RequiredError="Type your New Password Again" />
                            <div class="d-flex align-center justify-space-between">
                                @* <MudCheckBox T="bool" Required="true" RequiredError="You must agree" Label="I agree!" />*@
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Register</MudButton>
                            </div>
</MudForm>
@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm? form;


    // Password Visibility Section
    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    InputType PasswordCheckInput = InputType.Password;
    string PasswordCheckIcon = Icons.Material.Filled.VisibilityOff;

    void PWVisibilityClick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    void PWCheckVisibilityClick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordCheckIcon = Icons.Material.Filled.VisibilityOff;
            PasswordCheckInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordCheckIcon = Icons.Material.Filled.Visibility;
            PasswordCheckInput = InputType.Text;
        }
    }

    //Rules to create Strong Password
    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    //Checking if Password Matches
    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return "";
    }
}